Руководство пользователя:
Этот скрипт позволяет выполнять два основных действия: обучение модели и предсказание результатов на основе обученной модели.
Для обучения нужно приложить csv файл с подходящей структурой данных. Для предсказания нужно приложить csv файл с аналогичной структурой, в него будет добавлен столбец prediction с результатом предсказания.

1. Обучение модели (команда train)
	Чтобы обучить модель, выполните команду:

	python script.py train <путь_к_CSV-файлу>

	Дополнительные опции:

	-rf: Использовать RandomForest вместо CatBoost. Если эта опция не указана, будет использоваться CatBoost.
	-s: Выполнить подбор гиперпараметров с помощью GridSearch.
	-cv: Провести кросс-валидацию для оценки модели.
	-e: Использовать предустановленные параметры для модели.
	-p: Использовать параметры для модели в формате 'ключ=значение'. Например, для RandomForest: -p n_estimators=100 max_depth=10.
	--param_grid: Опциональные параметры для GridSearch в формате 'ключ=значение'. Например, для RandomForest: --param_grid n_estimators=100 max_depth=10.

	Пример команды:

	python script.py train data.csv -rf -s -cv --param_grid n_estimators=100 max_depth=20

	Эта команда обучит модель RandomForest с гиперпараметрами n_estimators=100 и max_depth=20, выполнит поиск по сетке параметров и проведёт кросс-валидацию.

2. Предсказание (команда predict)
	Для выполнения предсказаний с использованием уже обученной модели, выполните команду:

	python script.py predict <путь_к_CSV-файлу>

	Дополнительная опция:

	-rf: Использовать модель RandomForest вместо CatBoost.

	Пример команды:

	python script.py predict data.csv -rf

	Эта команда загрузит данные из файла data.csv, выполнит предсказание с помощью RandomForest и сохранит результаты в файле predictions.csv.

	Примечание:
	Модели и кодировщики сохраняются в директорию ./models.
	Для выполнения предсказаний необходимо использовать ту же модель, что и для обучения (RandomForest или CatBoost).

3. Для того чтобы обучить модель с помощью Docker, запустите контейнер с указанием команды для обучения:

	docker run --rm -v D:\data:/app/data -v D:\models:/app/models my_model_image train data/data.csv -e -cv

	Дополнительные опции:

	--rm: Удаляет контейнер после завершения работы.
	-v $(pwd)/data:/app/data: Монтирует директорию data на вашем компьютере в контейнер.
	-v $(pwd)/models:/app/models: Монтирует директорию models для хранения обученной модели.
	my_model_image: Это имя Docker-образа, который вы создали.
	train data/data.csv -e -cv: Команда, которую вы передаёте скрипту внутри контейнера (в данном случае обучение с использованием эталонных параметров и кросс-валидацией).

4. Запуск контейнера для предсказания
	Для того чтобы сделать предсказания с обученной моделью:

	docker run --rm -v D:\data:/app/data -v D:\models:/app/models my_model_image predict data/data.csv